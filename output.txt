Number of nodes: 50
Number of edges: 228
Underlying network embedding model: line
{'window_size': 1, 'sg': 1, 'sfdp_path': 'bin/sfdp_linux', 'iter_count': 50, 'sample': 0.001, 'scale': 1, 'lr_scheme': 'default', 'representation_size': 64, 'hs': 0, 'alpha': 0.025, 'min_alpha': 0.001}
Connected graph.
Subgraph 1 with 50 nodes and 228 edges
Graph Coarsening...
original nx edges: 
[(0, 41), (0, 42), (0, 3), (0, 22), (0, 23), (1, 33), (1, 27), (2, 26), (2, 35), (2, 36), (3, 6), (3, 39), (3, 12), (3, 23), (3, 28), (3, 30), (4, 9), (4, 34), (4, 43), (4, 38), (4, 17), (5, 49), (5, 34), (5, 36), (5, 45), (6, 35), (6, 40), (6, 42), (6, 43), (6, 47), (6, 49), (6, 22), (6, 24), (7, 8), (7, 37), (7, 30), (7, 45), (8, 24), (8, 34), (8, 29), (9, 37), (9, 10), (9, 43), (9, 13), (9, 19), (9, 23), (10, 11), (10, 45), (10, 25), (11, 43), (11, 37), (11, 21), (11, 23), (12, 25), (12, 18), (12, 39), (13, 21), (13, 17), (14, 33), (14, 41), (14, 21), (14, 24), (14, 29), (14, 31), (15, 16), (15, 39), (17, 44), (17, 46), (19, 33), (19, 29), (19, 25), (20, 49), (20, 44), (20, 29), (20, 30), (21, 46), (21, 29), (21, 30), (22, 42), (22, 44), (23, 32), (24, 39), (26, 33), (26, 31), (27, 32), (27, 37), (27, 40), (27, 41), (27, 47), (27, 31), (28, 33), (29, 33), (29, 44), (29, 31), (30, 33), (30, 31), (31, 33), (31, 39), (31, 45), (32, 46), (33, 38), (33, 47), (34, 36), (35, 43), (35, 42), (35, 37), (36, 48), (36, 41), (38, 40), (38, 43), (41, 43), (42, 43), (45, 46), (47, 48)]


()
{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 0, 7: 6, 8: 7, 9: 4, 10: 8, 11: 8, 12: 3, 13: 9, 14: 10, 15: 11, 16: 11, 17: 9, 18: 3, 19: 10, 20: 12, 21: 10, 22: 0, 23: 13, 24: 7, 25: 8, 26: 10, 27: 1, 28: 3, 29: 10, 30: 10, 31: 10, 32: 13, 33: 10, 34: 7, 35: 0, 36: 2, 37: 6, 38: 4, 39: 3, 40: 1, 41: 2, 42: 0, 43: 4, 44: 12, 45: 5, 46: 9, 47: 14, 48: 14, 49: 12}
15
original data format
magic graph before coarsening: 
defaultdict(<class 'magicgraph.WeightedNode'>, {0: [3, 22, 23, 41, 42], 1: [27, 33], 2: [26, 35, 36], 3: [0, 6, 12, 23, 28, 30, 39], 4: [9, 17, 34, 38, 43], 5: [34, 36, 45, 49], 6: [3, 22, 24, 35, 40, 42, 43, 47, 49], 7: [8, 30, 37, 45], 8: [7, 24, 29, 34], 9: [4, 10, 13, 19, 23, 37, 43], 10: [9, 11, 25, 45], 11: [10, 21, 23, 37, 43], 12: [3, 18, 25, 39], 13: [9, 17, 21], 14: [21, 24, 29, 31, 33, 41], 15: [16, 39], 16: [15], 17: [4, 13, 44, 46], 18: [12], 19: [9, 25, 29, 33], 20: [29, 30, 44, 49], 21: [11, 13, 14, 29, 30, 46], 22: [0, 6, 42, 44], 23: [0, 3, 9, 11, 32], 24: [6, 8, 14, 39], 25: [10, 12, 19], 26: [2, 31, 33], 27: [1, 31, 32, 37, 40, 41, 47], 28: [3, 33], 29: [8, 14, 19, 20, 21, 31, 33, 44], 30: [3, 7, 20, 21, 31, 33], 31: [14, 26, 27, 29, 30, 33, 39, 45], 32: [23, 27, 46], 33: [1, 14, 19, 26, 28, 29, 30, 31, 38, 47], 34: [4, 5, 8, 36], 35: [2, 6, 37, 42, 43], 36: [2, 5, 34, 41, 48], 37: [7, 9, 11, 27, 35], 38: [4, 33, 40, 43], 39: [3, 12, 15, 24, 31], 40: [6, 27, 38], 41: [0, 14, 27, 36, 43], 42: [0, 6, 22, 35, 43], 43: [4, 6, 9, 11, 35, 38, 41, 42], 44: [17, 20, 22, 29], 45: [5, 7, 10, 31, 46], 46: [17, 21, 32, 45], 47: [6, 27, 33, 48], 48: [36, 47], 49: [5, 6, 20]})


recursive merged nodes step 1
[{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 9, 11: 11, 12: 3, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 11, 22: 22, 23: 23, 24: 8, 25: 19, 26: 26, 27: 1, 28: 28, 29: 20, 30: 30, 31: 26, 32: 23, 33: 30, 34: 34, 35: 2, 36: 34, 37: 7, 38: 4, 39: 15, 40: 40, 41: 41, 42: 0, 43: 41, 44: 22, 45: 5, 46: 17, 47: 6, 48: 48, 49: 49}, {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 3, 7: 7, 8: 7, 9: 9, 11: 11, 13: 13, 14: 11, 15: 15, 16: 15, 17: 13, 18: 18, 19: 9, 20: 20, 22: 0, 23: 1, 26: 2, 28: 28, 30: 20, 34: 34, 40: 4, 41: 41, 48: 34, 49: 5}, {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 7: 7, 41: 4, 11: 7, 34: 2, 13: 9, 18: 18, 20: 1, 9: 9, 15: 15, 28: 3}, {0: 0, 1: 1, 2: 2, 3: 1, 4: 0, 5: 2, 7: 7, 9: 9, 15: 7, 18: 18}, {0: 0, 1: 1, 2: 0, 7: 1, 9: 9, 18: 18}]
('len - ', 5)


Original graph with 50 nodes and 228 edges
in external collapsing; merged is 
{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 9, 11: 11, 12: 3, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 11, 22: 22, 23: 23, 24: 8, 25: 19, 26: 26, 27: 1, 28: 28, 29: 20, 30: 30, 31: 26, 32: 23, 33: 30, 34: 34, 35: 2, 36: 34, 37: 7, 38: 4, 39: 15, 40: 40, 41: 41, 42: 0, 43: 41, 44: 22, 45: 5, 46: 17, 47: 6, 48: 48, 49: 49}

edges 
[[0, 3], [0, 22], [0, 23], [0, 41], [0, 42], [1, 27], [1, 33], [2, 26], [2, 35], [2, 36], [3, 0], [3, 6], [3, 12], [3, 23], [3, 28], [3, 30], [3, 39], [4, 9], [4, 17], [4, 34], [4, 38], [4, 43], [5, 34], [5, 36], [5, 45], [5, 49], [6, 3], [6, 22], [6, 24], [6, 35], [6, 40], [6, 42], [6, 43], [6, 47], [6, 49], [7, 8], [7, 30], [7, 37], [7, 45], [8, 7], [8, 24], [8, 29], [8, 34], [9, 4], [9, 10], [9, 13], [9, 19], [9, 23], [9, 37], [9, 43], [10, 9], [10, 11], [10, 25], [10, 45], [11, 10], [11, 21], [11, 23], [11, 37], [11, 43], [12, 3], [12, 18], [12, 25], [12, 39], [13, 9], [13, 17], [13, 21], [14, 21], [14, 24], [14, 29], [14, 31], [14, 33], [14, 41], [15, 16], [15, 39], [16, 15], [17, 4], [17, 13], [17, 44], [17, 46], [18, 12], [19, 9], [19, 25], [19, 29], [19, 33], [20, 29], [20, 30], [20, 44], [20, 49], [21, 11], [21, 13], [21, 14], [21, 29], [21, 30], [21, 46], [22, 0], [22, 6], [22, 42], [22, 44], [23, 0], [23, 3], [23, 9], [23, 11], [23, 32], [24, 6], [24, 8], [24, 14], [24, 39], [25, 10], [25, 12], [25, 19], [26, 2], [26, 31], [26, 33], [27, 1], [27, 31], [27, 32], [27, 37], [27, 40], [27, 41], [27, 47], [28, 3], [28, 33], [29, 8], [29, 14], [29, 19], [29, 20], [29, 21], [29, 31], [29, 33], [29, 44], [30, 3], [30, 7], [30, 20], [30, 21], [30, 31], [30, 33], [31, 14], [31, 26], [31, 27], [31, 29], [31, 30], [31, 33], [31, 39], [31, 45], [32, 23], [32, 27], [32, 46], [33, 1], [33, 14], [33, 19], [33, 26], [33, 28], [33, 29], [33, 30], [33, 31], [33, 38], [33, 47], [34, 4], [34, 5], [34, 8], [34, 36], [35, 2], [35, 6], [35, 37], [35, 42], [35, 43], [36, 2], [36, 5], [36, 34], [36, 41], [36, 48], [37, 7], [37, 9], [37, 11], [37, 27], [37, 35], [38, 4], [38, 33], [38, 40], [38, 43], [39, 3], [39, 12], [39, 15], [39, 24], [39, 31], [40, 6], [40, 27], [40, 38], [41, 0], [41, 14], [41, 27], [41, 36], [41, 43], [42, 0], [42, 6], [42, 22], [42, 35], [42, 43], [43, 4], [43, 6], [43, 9], [43, 11], [43, 35], [43, 38], [43, 41], [43, 42], [44, 17], [44, 20], [44, 22], [44, 29], [45, 5], [45, 7], [45, 10], [45, 31], [45, 46], [46, 17], [46, 21], [46, 32], [46, 45], [47, 6], [47, 27], [47, 33], [47, 48], [48, 36], [48, 47], [49, 5], [49, 6], [49, 20]]

('a: ', 0, ' b: ', 3, ' merged[a]: ', 0, ', merged[b]: ', 3)
('a: ', 0, ' b: ', 22, ' merged[a]: ', 0, ', merged[b]: ', 22)
('a: ', 0, ' b: ', 23, ' merged[a]: ', 0, ', merged[b]: ', 23)
('a: ', 0, ' b: ', 41, ' merged[a]: ', 0, ', merged[b]: ', 41)
('a: ', 0, ' b: ', 42, ' merged[a]: ', 0, ', merged[b]: ', 0)
('a: ', 1, ' b: ', 27, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 1, ' b: ', 33, ' merged[a]: ', 1, ', merged[b]: ', 30)
('a: ', 2, ' b: ', 26, ' merged[a]: ', 2, ', merged[b]: ', 26)
('a: ', 2, ' b: ', 35, ' merged[a]: ', 2, ', merged[b]: ', 2)
('a: ', 2, ' b: ', 36, ' merged[a]: ', 2, ', merged[b]: ', 34)
('a: ', 3, ' b: ', 0, ' merged[a]: ', 3, ', merged[b]: ', 0)
('a: ', 3, ' b: ', 6, ' merged[a]: ', 3, ', merged[b]: ', 6)
('a: ', 3, ' b: ', 12, ' merged[a]: ', 3, ', merged[b]: ', 3)
('a: ', 3, ' b: ', 23, ' merged[a]: ', 3, ', merged[b]: ', 23)
('a: ', 3, ' b: ', 28, ' merged[a]: ', 3, ', merged[b]: ', 28)
('a: ', 3, ' b: ', 30, ' merged[a]: ', 3, ', merged[b]: ', 30)
('a: ', 3, ' b: ', 39, ' merged[a]: ', 3, ', merged[b]: ', 15)
('a: ', 4, ' b: ', 9, ' merged[a]: ', 4, ', merged[b]: ', 9)
('a: ', 4, ' b: ', 17, ' merged[a]: ', 4, ', merged[b]: ', 17)
('a: ', 4, ' b: ', 34, ' merged[a]: ', 4, ', merged[b]: ', 34)
('a: ', 4, ' b: ', 38, ' merged[a]: ', 4, ', merged[b]: ', 4)
('a: ', 4, ' b: ', 43, ' merged[a]: ', 4, ', merged[b]: ', 41)
('a: ', 5, ' b: ', 34, ' merged[a]: ', 5, ', merged[b]: ', 34)
('a: ', 5, ' b: ', 36, ' merged[a]: ', 5, ', merged[b]: ', 34)
('a: ', 5, ' b: ', 45, ' merged[a]: ', 5, ', merged[b]: ', 5)
('a: ', 5, ' b: ', 49, ' merged[a]: ', 5, ', merged[b]: ', 49)
('a: ', 6, ' b: ', 3, ' merged[a]: ', 6, ', merged[b]: ', 3)
('a: ', 6, ' b: ', 22, ' merged[a]: ', 6, ', merged[b]: ', 22)
('a: ', 6, ' b: ', 24, ' merged[a]: ', 6, ', merged[b]: ', 8)
('a: ', 6, ' b: ', 35, ' merged[a]: ', 6, ', merged[b]: ', 2)
('a: ', 6, ' b: ', 40, ' merged[a]: ', 6, ', merged[b]: ', 40)
('a: ', 6, ' b: ', 42, ' merged[a]: ', 6, ', merged[b]: ', 0)
('a: ', 6, ' b: ', 43, ' merged[a]: ', 6, ', merged[b]: ', 41)
('a: ', 6, ' b: ', 47, ' merged[a]: ', 6, ', merged[b]: ', 6)
('a: ', 6, ' b: ', 49, ' merged[a]: ', 6, ', merged[b]: ', 49)
('a: ', 7, ' b: ', 8, ' merged[a]: ', 7, ', merged[b]: ', 8)
('a: ', 7, ' b: ', 30, ' merged[a]: ', 7, ', merged[b]: ', 30)
('a: ', 7, ' b: ', 37, ' merged[a]: ', 7, ', merged[b]: ', 7)
('a: ', 7, ' b: ', 45, ' merged[a]: ', 7, ', merged[b]: ', 5)
('a: ', 8, ' b: ', 7, ' merged[a]: ', 8, ', merged[b]: ', 7)
('a: ', 8, ' b: ', 24, ' merged[a]: ', 8, ', merged[b]: ', 8)
('a: ', 8, ' b: ', 29, ' merged[a]: ', 8, ', merged[b]: ', 20)
('a: ', 8, ' b: ', 34, ' merged[a]: ', 8, ', merged[b]: ', 34)
('a: ', 9, ' b: ', 4, ' merged[a]: ', 9, ', merged[b]: ', 4)
('a: ', 9, ' b: ', 10, ' merged[a]: ', 9, ', merged[b]: ', 9)
('a: ', 9, ' b: ', 13, ' merged[a]: ', 9, ', merged[b]: ', 13)
('a: ', 9, ' b: ', 19, ' merged[a]: ', 9, ', merged[b]: ', 19)
('a: ', 9, ' b: ', 23, ' merged[a]: ', 9, ', merged[b]: ', 23)
('a: ', 9, ' b: ', 37, ' merged[a]: ', 9, ', merged[b]: ', 7)
('a: ', 9, ' b: ', 43, ' merged[a]: ', 9, ', merged[b]: ', 41)
('a: ', 10, ' b: ', 9, ' merged[a]: ', 9, ', merged[b]: ', 9)
('a: ', 10, ' b: ', 11, ' merged[a]: ', 9, ', merged[b]: ', 11)
('a: ', 10, ' b: ', 25, ' merged[a]: ', 9, ', merged[b]: ', 19)
('a: ', 10, ' b: ', 45, ' merged[a]: ', 9, ', merged[b]: ', 5)
('a: ', 11, ' b: ', 10, ' merged[a]: ', 11, ', merged[b]: ', 9)
('a: ', 11, ' b: ', 21, ' merged[a]: ', 11, ', merged[b]: ', 11)
('a: ', 11, ' b: ', 23, ' merged[a]: ', 11, ', merged[b]: ', 23)
('a: ', 11, ' b: ', 37, ' merged[a]: ', 11, ', merged[b]: ', 7)
('a: ', 11, ' b: ', 43, ' merged[a]: ', 11, ', merged[b]: ', 41)
('a: ', 12, ' b: ', 3, ' merged[a]: ', 3, ', merged[b]: ', 3)
('a: ', 12, ' b: ', 18, ' merged[a]: ', 3, ', merged[b]: ', 18)
('a: ', 12, ' b: ', 25, ' merged[a]: ', 3, ', merged[b]: ', 19)
('a: ', 12, ' b: ', 39, ' merged[a]: ', 3, ', merged[b]: ', 15)
('a: ', 13, ' b: ', 9, ' merged[a]: ', 13, ', merged[b]: ', 9)
('a: ', 13, ' b: ', 17, ' merged[a]: ', 13, ', merged[b]: ', 17)
('a: ', 13, ' b: ', 21, ' merged[a]: ', 13, ', merged[b]: ', 11)
('a: ', 14, ' b: ', 21, ' merged[a]: ', 14, ', merged[b]: ', 11)
('a: ', 14, ' b: ', 24, ' merged[a]: ', 14, ', merged[b]: ', 8)
('a: ', 14, ' b: ', 29, ' merged[a]: ', 14, ', merged[b]: ', 20)
('a: ', 14, ' b: ', 31, ' merged[a]: ', 14, ', merged[b]: ', 26)
('a: ', 14, ' b: ', 33, ' merged[a]: ', 14, ', merged[b]: ', 30)
('a: ', 14, ' b: ', 41, ' merged[a]: ', 14, ', merged[b]: ', 41)
('a: ', 15, ' b: ', 16, ' merged[a]: ', 15, ', merged[b]: ', 16)
('a: ', 15, ' b: ', 39, ' merged[a]: ', 15, ', merged[b]: ', 15)
('a: ', 16, ' b: ', 15, ' merged[a]: ', 16, ', merged[b]: ', 15)
('a: ', 17, ' b: ', 4, ' merged[a]: ', 17, ', merged[b]: ', 4)
('a: ', 17, ' b: ', 13, ' merged[a]: ', 17, ', merged[b]: ', 13)
('a: ', 17, ' b: ', 44, ' merged[a]: ', 17, ', merged[b]: ', 22)
('a: ', 17, ' b: ', 46, ' merged[a]: ', 17, ', merged[b]: ', 17)
('a: ', 18, ' b: ', 12, ' merged[a]: ', 18, ', merged[b]: ', 3)
('a: ', 19, ' b: ', 9, ' merged[a]: ', 19, ', merged[b]: ', 9)
('a: ', 19, ' b: ', 25, ' merged[a]: ', 19, ', merged[b]: ', 19)
('a: ', 19, ' b: ', 29, ' merged[a]: ', 19, ', merged[b]: ', 20)
('a: ', 19, ' b: ', 33, ' merged[a]: ', 19, ', merged[b]: ', 30)
('a: ', 20, ' b: ', 29, ' merged[a]: ', 20, ', merged[b]: ', 20)
('a: ', 20, ' b: ', 30, ' merged[a]: ', 20, ', merged[b]: ', 30)
('a: ', 20, ' b: ', 44, ' merged[a]: ', 20, ', merged[b]: ', 22)
('a: ', 20, ' b: ', 49, ' merged[a]: ', 20, ', merged[b]: ', 49)
('a: ', 21, ' b: ', 11, ' merged[a]: ', 11, ', merged[b]: ', 11)
('a: ', 21, ' b: ', 13, ' merged[a]: ', 11, ', merged[b]: ', 13)
('a: ', 21, ' b: ', 14, ' merged[a]: ', 11, ', merged[b]: ', 14)
('a: ', 21, ' b: ', 29, ' merged[a]: ', 11, ', merged[b]: ', 20)
('a: ', 21, ' b: ', 30, ' merged[a]: ', 11, ', merged[b]: ', 30)
('a: ', 21, ' b: ', 46, ' merged[a]: ', 11, ', merged[b]: ', 17)
('a: ', 22, ' b: ', 0, ' merged[a]: ', 22, ', merged[b]: ', 0)
('a: ', 22, ' b: ', 6, ' merged[a]: ', 22, ', merged[b]: ', 6)
('a: ', 22, ' b: ', 42, ' merged[a]: ', 22, ', merged[b]: ', 0)
('a: ', 22, ' b: ', 44, ' merged[a]: ', 22, ', merged[b]: ', 22)
('a: ', 23, ' b: ', 0, ' merged[a]: ', 23, ', merged[b]: ', 0)
('a: ', 23, ' b: ', 3, ' merged[a]: ', 23, ', merged[b]: ', 3)
('a: ', 23, ' b: ', 9, ' merged[a]: ', 23, ', merged[b]: ', 9)
('a: ', 23, ' b: ', 11, ' merged[a]: ', 23, ', merged[b]: ', 11)
('a: ', 23, ' b: ', 32, ' merged[a]: ', 23, ', merged[b]: ', 23)
('a: ', 24, ' b: ', 6, ' merged[a]: ', 8, ', merged[b]: ', 6)
('a: ', 24, ' b: ', 8, ' merged[a]: ', 8, ', merged[b]: ', 8)
('a: ', 24, ' b: ', 14, ' merged[a]: ', 8, ', merged[b]: ', 14)
('a: ', 24, ' b: ', 39, ' merged[a]: ', 8, ', merged[b]: ', 15)
('a: ', 25, ' b: ', 10, ' merged[a]: ', 19, ', merged[b]: ', 9)
('a: ', 25, ' b: ', 12, ' merged[a]: ', 19, ', merged[b]: ', 3)
('a: ', 25, ' b: ', 19, ' merged[a]: ', 19, ', merged[b]: ', 19)
('a: ', 26, ' b: ', 2, ' merged[a]: ', 26, ', merged[b]: ', 2)
('a: ', 26, ' b: ', 31, ' merged[a]: ', 26, ', merged[b]: ', 26)
('a: ', 26, ' b: ', 33, ' merged[a]: ', 26, ', merged[b]: ', 30)
('a: ', 27, ' b: ', 1, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 27, ' b: ', 31, ' merged[a]: ', 1, ', merged[b]: ', 26)
('a: ', 27, ' b: ', 32, ' merged[a]: ', 1, ', merged[b]: ', 23)
('a: ', 27, ' b: ', 37, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 27, ' b: ', 40, ' merged[a]: ', 1, ', merged[b]: ', 40)
('a: ', 27, ' b: ', 41, ' merged[a]: ', 1, ', merged[b]: ', 41)
('a: ', 27, ' b: ', 47, ' merged[a]: ', 1, ', merged[b]: ', 6)
('a: ', 28, ' b: ', 3, ' merged[a]: ', 28, ', merged[b]: ', 3)
('a: ', 28, ' b: ', 33, ' merged[a]: ', 28, ', merged[b]: ', 30)
('a: ', 29, ' b: ', 8, ' merged[a]: ', 20, ', merged[b]: ', 8)
('a: ', 29, ' b: ', 14, ' merged[a]: ', 20, ', merged[b]: ', 14)
('a: ', 29, ' b: ', 19, ' merged[a]: ', 20, ', merged[b]: ', 19)
('a: ', 29, ' b: ', 20, ' merged[a]: ', 20, ', merged[b]: ', 20)
('a: ', 29, ' b: ', 21, ' merged[a]: ', 20, ', merged[b]: ', 11)
('a: ', 29, ' b: ', 31, ' merged[a]: ', 20, ', merged[b]: ', 26)
('a: ', 29, ' b: ', 33, ' merged[a]: ', 20, ', merged[b]: ', 30)
('a: ', 29, ' b: ', 44, ' merged[a]: ', 20, ', merged[b]: ', 22)
('a: ', 30, ' b: ', 3, ' merged[a]: ', 30, ', merged[b]: ', 3)
('a: ', 30, ' b: ', 7, ' merged[a]: ', 30, ', merged[b]: ', 7)
('a: ', 30, ' b: ', 20, ' merged[a]: ', 30, ', merged[b]: ', 20)
('a: ', 30, ' b: ', 21, ' merged[a]: ', 30, ', merged[b]: ', 11)
('a: ', 30, ' b: ', 31, ' merged[a]: ', 30, ', merged[b]: ', 26)
('a: ', 30, ' b: ', 33, ' merged[a]: ', 30, ', merged[b]: ', 30)
('a: ', 31, ' b: ', 14, ' merged[a]: ', 26, ', merged[b]: ', 14)
('a: ', 31, ' b: ', 26, ' merged[a]: ', 26, ', merged[b]: ', 26)
('a: ', 31, ' b: ', 27, ' merged[a]: ', 26, ', merged[b]: ', 1)
('a: ', 31, ' b: ', 29, ' merged[a]: ', 26, ', merged[b]: ', 20)
('a: ', 31, ' b: ', 30, ' merged[a]: ', 26, ', merged[b]: ', 30)
('a: ', 31, ' b: ', 33, ' merged[a]: ', 26, ', merged[b]: ', 30)
('a: ', 31, ' b: ', 39, ' merged[a]: ', 26, ', merged[b]: ', 15)
('a: ', 31, ' b: ', 45, ' merged[a]: ', 26, ', merged[b]: ', 5)
('a: ', 32, ' b: ', 23, ' merged[a]: ', 23, ', merged[b]: ', 23)
('a: ', 32, ' b: ', 27, ' merged[a]: ', 23, ', merged[b]: ', 1)
('a: ', 32, ' b: ', 46, ' merged[a]: ', 23, ', merged[b]: ', 17)
('a: ', 33, ' b: ', 1, ' merged[a]: ', 30, ', merged[b]: ', 1)
('a: ', 33, ' b: ', 14, ' merged[a]: ', 30, ', merged[b]: ', 14)
('a: ', 33, ' b: ', 19, ' merged[a]: ', 30, ', merged[b]: ', 19)
('a: ', 33, ' b: ', 26, ' merged[a]: ', 30, ', merged[b]: ', 26)
('a: ', 33, ' b: ', 28, ' merged[a]: ', 30, ', merged[b]: ', 28)
('a: ', 33, ' b: ', 29, ' merged[a]: ', 30, ', merged[b]: ', 20)
('a: ', 33, ' b: ', 30, ' merged[a]: ', 30, ', merged[b]: ', 30)
('a: ', 33, ' b: ', 31, ' merged[a]: ', 30, ', merged[b]: ', 26)
('a: ', 33, ' b: ', 38, ' merged[a]: ', 30, ', merged[b]: ', 4)
('a: ', 33, ' b: ', 47, ' merged[a]: ', 30, ', merged[b]: ', 6)
('a: ', 34, ' b: ', 4, ' merged[a]: ', 34, ', merged[b]: ', 4)
('a: ', 34, ' b: ', 5, ' merged[a]: ', 34, ', merged[b]: ', 5)
('a: ', 34, ' b: ', 8, ' merged[a]: ', 34, ', merged[b]: ', 8)
('a: ', 34, ' b: ', 36, ' merged[a]: ', 34, ', merged[b]: ', 34)
('a: ', 35, ' b: ', 2, ' merged[a]: ', 2, ', merged[b]: ', 2)
('a: ', 35, ' b: ', 6, ' merged[a]: ', 2, ', merged[b]: ', 6)
('a: ', 35, ' b: ', 37, ' merged[a]: ', 2, ', merged[b]: ', 7)
('a: ', 35, ' b: ', 42, ' merged[a]: ', 2, ', merged[b]: ', 0)
('a: ', 35, ' b: ', 43, ' merged[a]: ', 2, ', merged[b]: ', 41)
('a: ', 36, ' b: ', 2, ' merged[a]: ', 34, ', merged[b]: ', 2)
('a: ', 36, ' b: ', 5, ' merged[a]: ', 34, ', merged[b]: ', 5)
('a: ', 36, ' b: ', 34, ' merged[a]: ', 34, ', merged[b]: ', 34)
('a: ', 36, ' b: ', 41, ' merged[a]: ', 34, ', merged[b]: ', 41)
('a: ', 36, ' b: ', 48, ' merged[a]: ', 34, ', merged[b]: ', 48)
('a: ', 37, ' b: ', 7, ' merged[a]: ', 7, ', merged[b]: ', 7)
('a: ', 37, ' b: ', 9, ' merged[a]: ', 7, ', merged[b]: ', 9)
('a: ', 37, ' b: ', 11, ' merged[a]: ', 7, ', merged[b]: ', 11)
('a: ', 37, ' b: ', 27, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 37, ' b: ', 35, ' merged[a]: ', 7, ', merged[b]: ', 2)
('a: ', 38, ' b: ', 4, ' merged[a]: ', 4, ', merged[b]: ', 4)
('a: ', 38, ' b: ', 33, ' merged[a]: ', 4, ', merged[b]: ', 30)
('a: ', 38, ' b: ', 40, ' merged[a]: ', 4, ', merged[b]: ', 40)
('a: ', 38, ' b: ', 43, ' merged[a]: ', 4, ', merged[b]: ', 41)
('a: ', 39, ' b: ', 3, ' merged[a]: ', 15, ', merged[b]: ', 3)
('a: ', 39, ' b: ', 12, ' merged[a]: ', 15, ', merged[b]: ', 3)
('a: ', 39, ' b: ', 15, ' merged[a]: ', 15, ', merged[b]: ', 15)
('a: ', 39, ' b: ', 24, ' merged[a]: ', 15, ', merged[b]: ', 8)
('a: ', 39, ' b: ', 31, ' merged[a]: ', 15, ', merged[b]: ', 26)
('a: ', 40, ' b: ', 6, ' merged[a]: ', 40, ', merged[b]: ', 6)
('a: ', 40, ' b: ', 27, ' merged[a]: ', 40, ', merged[b]: ', 1)
('a: ', 40, ' b: ', 38, ' merged[a]: ', 40, ', merged[b]: ', 4)
('a: ', 41, ' b: ', 0, ' merged[a]: ', 41, ', merged[b]: ', 0)
('a: ', 41, ' b: ', 14, ' merged[a]: ', 41, ', merged[b]: ', 14)
('a: ', 41, ' b: ', 27, ' merged[a]: ', 41, ', merged[b]: ', 1)
('a: ', 41, ' b: ', 36, ' merged[a]: ', 41, ', merged[b]: ', 34)
('a: ', 41, ' b: ', 43, ' merged[a]: ', 41, ', merged[b]: ', 41)
('a: ', 42, ' b: ', 0, ' merged[a]: ', 0, ', merged[b]: ', 0)
('a: ', 42, ' b: ', 6, ' merged[a]: ', 0, ', merged[b]: ', 6)
('a: ', 42, ' b: ', 22, ' merged[a]: ', 0, ', merged[b]: ', 22)
('a: ', 42, ' b: ', 35, ' merged[a]: ', 0, ', merged[b]: ', 2)
('a: ', 42, ' b: ', 43, ' merged[a]: ', 0, ', merged[b]: ', 41)
('a: ', 43, ' b: ', 4, ' merged[a]: ', 41, ', merged[b]: ', 4)
('a: ', 43, ' b: ', 6, ' merged[a]: ', 41, ', merged[b]: ', 6)
('a: ', 43, ' b: ', 9, ' merged[a]: ', 41, ', merged[b]: ', 9)
('a: ', 43, ' b: ', 11, ' merged[a]: ', 41, ', merged[b]: ', 11)
('a: ', 43, ' b: ', 35, ' merged[a]: ', 41, ', merged[b]: ', 2)
('a: ', 43, ' b: ', 38, ' merged[a]: ', 41, ', merged[b]: ', 4)
('a: ', 43, ' b: ', 41, ' merged[a]: ', 41, ', merged[b]: ', 41)
('a: ', 43, ' b: ', 42, ' merged[a]: ', 41, ', merged[b]: ', 0)
('a: ', 44, ' b: ', 17, ' merged[a]: ', 22, ', merged[b]: ', 17)
('a: ', 44, ' b: ', 20, ' merged[a]: ', 22, ', merged[b]: ', 20)
('a: ', 44, ' b: ', 22, ' merged[a]: ', 22, ', merged[b]: ', 22)
('a: ', 44, ' b: ', 29, ' merged[a]: ', 22, ', merged[b]: ', 20)
('a: ', 45, ' b: ', 5, ' merged[a]: ', 5, ', merged[b]: ', 5)
('a: ', 45, ' b: ', 7, ' merged[a]: ', 5, ', merged[b]: ', 7)
('a: ', 45, ' b: ', 10, ' merged[a]: ', 5, ', merged[b]: ', 9)
('a: ', 45, ' b: ', 31, ' merged[a]: ', 5, ', merged[b]: ', 26)
('a: ', 45, ' b: ', 46, ' merged[a]: ', 5, ', merged[b]: ', 17)
('a: ', 46, ' b: ', 17, ' merged[a]: ', 17, ', merged[b]: ', 17)
('a: ', 46, ' b: ', 21, ' merged[a]: ', 17, ', merged[b]: ', 11)
('a: ', 46, ' b: ', 32, ' merged[a]: ', 17, ', merged[b]: ', 23)
('a: ', 46, ' b: ', 45, ' merged[a]: ', 17, ', merged[b]: ', 5)
('a: ', 47, ' b: ', 6, ' merged[a]: ', 6, ', merged[b]: ', 6)
('a: ', 47, ' b: ', 27, ' merged[a]: ', 6, ', merged[b]: ', 1)
('a: ', 47, ' b: ', 33, ' merged[a]: ', 6, ', merged[b]: ', 30)
('a: ', 47, ' b: ', 48, ' merged[a]: ', 6, ', merged[b]: ', 48)
('a: ', 48, ' b: ', 36, ' merged[a]: ', 48, ', merged[b]: ', 34)
('a: ', 48, ' b: ', 47, ' merged[a]: ', 48, ', merged[b]: ', 6)
('a: ', 49, ' b: ', 5, ' merged[a]: ', 49, ', merged[b]: ', 5)
('a: ', 49, ' b: ', 6, ' merged[a]: ', 49, ', merged[b]: ', 6)
('a: ', 49, ' b: ', 20, ' merged[a]: ', 49, ', merged[b]: ', 20)
Coarsening Round 1:
Generate coarsened graph with 29 nodes and 166 edges
in external collapsing; merged is 
{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 3, 7: 7, 8: 7, 9: 9, 11: 11, 13: 13, 14: 11, 15: 15, 16: 15, 17: 13, 18: 18, 19: 9, 20: 20, 22: 0, 23: 1, 26: 2, 28: 28, 30: 20, 34: 34, 40: 4, 41: 41, 48: 34, 49: 5}

edges 
[[0, 2], [0, 3], [0, 6], [0, 22], [0, 23], [0, 41], [1, 6], [1, 7], [1, 23], [1, 26], [1, 30], [1, 40], [1, 41], [2, 0], [2, 6], [2, 7], [2, 26], [2, 34], [2, 41], [3, 0], [3, 6], [3, 15], [3, 18], [3, 19], [3, 23], [3, 28], [3, 30], [4, 9], [4, 17], [4, 30], [4, 34], [4, 40], [4, 41], [5, 7], [5, 9], [5, 17], [5, 26], [5, 34], [5, 49], [6, 0], [6, 1], [6, 2], [6, 3], [6, 8], [6, 22], [6, 30], [6, 40], [6, 41], [6, 48], [6, 49], [7, 1], [7, 2], [7, 5], [7, 8], [7, 9], [7, 11], [7, 30], [8, 6], [8, 7], [8, 14], [8, 15], [8, 20], [8, 34], [9, 4], [9, 5], [9, 7], [9, 11], [9, 13], [9, 19], [9, 23], [9, 41], [11, 7], [11, 9], [11, 13], [11, 14], [11, 17], [11, 20], [11, 23], [11, 30], [11, 41], [13, 9], [13, 11], [13, 17], [14, 8], [14, 11], [14, 20], [14, 26], [14, 30], [14, 41], [15, 3], [15, 8], [15, 16], [15, 26], [16, 15], [17, 4], [17, 5], [17, 11], [17, 13], [17, 22], [17, 23], [18, 3], [19, 3], [19, 9], [19, 20], [19, 30], [20, 8], [20, 11], [20, 14], [20, 19], [20, 22], [20, 26], [20, 30], [20, 49], [22, 0], [22, 6], [22, 17], [22, 20], [23, 0], [23, 1], [23, 3], [23, 9], [23, 11], [23, 17], [26, 1], [26, 2], [26, 5], [26, 14], [26, 15], [26, 20], [26, 30], [28, 3], [28, 30], [30, 1], [30, 3], [30, 4], [30, 6], [30, 7], [30, 11], [30, 14], [30, 19], [30, 20], [30, 26], [30, 28], [34, 2], [34, 4], [34, 5], [34, 8], [34, 41], [34, 48], [40, 1], [40, 4], [40, 6], [41, 0], [41, 1], [41, 2], [41, 4], [41, 6], [41, 9], [41, 11], [41, 14], [41, 34], [48, 6], [48, 34], [49, 5], [49, 6], [49, 20]]

('a: ', 0, ' b: ', 2, ' merged[a]: ', 0, ', merged[b]: ', 2)
('a: ', 0, ' b: ', 3, ' merged[a]: ', 0, ', merged[b]: ', 3)
('a: ', 0, ' b: ', 6, ' merged[a]: ', 0, ', merged[b]: ', 3)
('a: ', 0, ' b: ', 22, ' merged[a]: ', 0, ', merged[b]: ', 0)
('a: ', 0, ' b: ', 23, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 0, ' b: ', 41, ' merged[a]: ', 0, ', merged[b]: ', 41)
('a: ', 1, ' b: ', 6, ' merged[a]: ', 1, ', merged[b]: ', 3)
('a: ', 1, ' b: ', 7, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 1, ' b: ', 23, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 1, ' b: ', 26, ' merged[a]: ', 1, ', merged[b]: ', 2)
('a: ', 1, ' b: ', 30, ' merged[a]: ', 1, ', merged[b]: ', 20)
('a: ', 1, ' b: ', 40, ' merged[a]: ', 1, ', merged[b]: ', 4)
('a: ', 1, ' b: ', 41, ' merged[a]: ', 1, ', merged[b]: ', 41)
('a: ', 2, ' b: ', 0, ' merged[a]: ', 2, ', merged[b]: ', 0)
('a: ', 2, ' b: ', 6, ' merged[a]: ', 2, ', merged[b]: ', 3)
('a: ', 2, ' b: ', 7, ' merged[a]: ', 2, ', merged[b]: ', 7)
('a: ', 2, ' b: ', 26, ' merged[a]: ', 2, ', merged[b]: ', 2)
('a: ', 2, ' b: ', 34, ' merged[a]: ', 2, ', merged[b]: ', 34)
('a: ', 2, ' b: ', 41, ' merged[a]: ', 2, ', merged[b]: ', 41)
('a: ', 3, ' b: ', 0, ' merged[a]: ', 3, ', merged[b]: ', 0)
('a: ', 3, ' b: ', 6, ' merged[a]: ', 3, ', merged[b]: ', 3)
('a: ', 3, ' b: ', 15, ' merged[a]: ', 3, ', merged[b]: ', 15)
('a: ', 3, ' b: ', 18, ' merged[a]: ', 3, ', merged[b]: ', 18)
('a: ', 3, ' b: ', 19, ' merged[a]: ', 3, ', merged[b]: ', 9)
('a: ', 3, ' b: ', 23, ' merged[a]: ', 3, ', merged[b]: ', 1)
('a: ', 3, ' b: ', 28, ' merged[a]: ', 3, ', merged[b]: ', 28)
('a: ', 3, ' b: ', 30, ' merged[a]: ', 3, ', merged[b]: ', 20)
('a: ', 4, ' b: ', 9, ' merged[a]: ', 4, ', merged[b]: ', 9)
('a: ', 4, ' b: ', 17, ' merged[a]: ', 4, ', merged[b]: ', 13)
('a: ', 4, ' b: ', 30, ' merged[a]: ', 4, ', merged[b]: ', 20)
('a: ', 4, ' b: ', 34, ' merged[a]: ', 4, ', merged[b]: ', 34)
('a: ', 4, ' b: ', 40, ' merged[a]: ', 4, ', merged[b]: ', 4)
('a: ', 4, ' b: ', 41, ' merged[a]: ', 4, ', merged[b]: ', 41)
('a: ', 5, ' b: ', 7, ' merged[a]: ', 5, ', merged[b]: ', 7)
('a: ', 5, ' b: ', 9, ' merged[a]: ', 5, ', merged[b]: ', 9)
('a: ', 5, ' b: ', 17, ' merged[a]: ', 5, ', merged[b]: ', 13)
('a: ', 5, ' b: ', 26, ' merged[a]: ', 5, ', merged[b]: ', 2)
('a: ', 5, ' b: ', 34, ' merged[a]: ', 5, ', merged[b]: ', 34)
('a: ', 5, ' b: ', 49, ' merged[a]: ', 5, ', merged[b]: ', 5)
('a: ', 6, ' b: ', 0, ' merged[a]: ', 3, ', merged[b]: ', 0)
('a: ', 6, ' b: ', 1, ' merged[a]: ', 3, ', merged[b]: ', 1)
('a: ', 6, ' b: ', 2, ' merged[a]: ', 3, ', merged[b]: ', 2)
('a: ', 6, ' b: ', 3, ' merged[a]: ', 3, ', merged[b]: ', 3)
('a: ', 6, ' b: ', 8, ' merged[a]: ', 3, ', merged[b]: ', 7)
('a: ', 6, ' b: ', 22, ' merged[a]: ', 3, ', merged[b]: ', 0)
('a: ', 6, ' b: ', 30, ' merged[a]: ', 3, ', merged[b]: ', 20)
('a: ', 6, ' b: ', 40, ' merged[a]: ', 3, ', merged[b]: ', 4)
('a: ', 6, ' b: ', 41, ' merged[a]: ', 3, ', merged[b]: ', 41)
('a: ', 6, ' b: ', 48, ' merged[a]: ', 3, ', merged[b]: ', 34)
('a: ', 6, ' b: ', 49, ' merged[a]: ', 3, ', merged[b]: ', 5)
('a: ', 7, ' b: ', 1, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 7, ' b: ', 2, ' merged[a]: ', 7, ', merged[b]: ', 2)
('a: ', 7, ' b: ', 5, ' merged[a]: ', 7, ', merged[b]: ', 5)
('a: ', 7, ' b: ', 8, ' merged[a]: ', 7, ', merged[b]: ', 7)
('a: ', 7, ' b: ', 9, ' merged[a]: ', 7, ', merged[b]: ', 9)
('a: ', 7, ' b: ', 11, ' merged[a]: ', 7, ', merged[b]: ', 11)
('a: ', 7, ' b: ', 30, ' merged[a]: ', 7, ', merged[b]: ', 20)
('a: ', 8, ' b: ', 6, ' merged[a]: ', 7, ', merged[b]: ', 3)
('a: ', 8, ' b: ', 7, ' merged[a]: ', 7, ', merged[b]: ', 7)
('a: ', 8, ' b: ', 14, ' merged[a]: ', 7, ', merged[b]: ', 11)
('a: ', 8, ' b: ', 15, ' merged[a]: ', 7, ', merged[b]: ', 15)
('a: ', 8, ' b: ', 20, ' merged[a]: ', 7, ', merged[b]: ', 20)
('a: ', 8, ' b: ', 34, ' merged[a]: ', 7, ', merged[b]: ', 34)
('a: ', 9, ' b: ', 4, ' merged[a]: ', 9, ', merged[b]: ', 4)
('a: ', 9, ' b: ', 5, ' merged[a]: ', 9, ', merged[b]: ', 5)
('a: ', 9, ' b: ', 7, ' merged[a]: ', 9, ', merged[b]: ', 7)
('a: ', 9, ' b: ', 11, ' merged[a]: ', 9, ', merged[b]: ', 11)
('a: ', 9, ' b: ', 13, ' merged[a]: ', 9, ', merged[b]: ', 13)
('a: ', 9, ' b: ', 19, ' merged[a]: ', 9, ', merged[b]: ', 9)
('a: ', 9, ' b: ', 23, ' merged[a]: ', 9, ', merged[b]: ', 1)
('a: ', 9, ' b: ', 41, ' merged[a]: ', 9, ', merged[b]: ', 41)
('a: ', 11, ' b: ', 7, ' merged[a]: ', 11, ', merged[b]: ', 7)
('a: ', 11, ' b: ', 9, ' merged[a]: ', 11, ', merged[b]: ', 9)
('a: ', 11, ' b: ', 13, ' merged[a]: ', 11, ', merged[b]: ', 13)
('a: ', 11, ' b: ', 14, ' merged[a]: ', 11, ', merged[b]: ', 11)
('a: ', 11, ' b: ', 17, ' merged[a]: ', 11, ', merged[b]: ', 13)
('a: ', 11, ' b: ', 20, ' merged[a]: ', 11, ', merged[b]: ', 20)
('a: ', 11, ' b: ', 23, ' merged[a]: ', 11, ', merged[b]: ', 1)
('a: ', 11, ' b: ', 30, ' merged[a]: ', 11, ', merged[b]: ', 20)
('a: ', 11, ' b: ', 41, ' merged[a]: ', 11, ', merged[b]: ', 41)
('a: ', 13, ' b: ', 9, ' merged[a]: ', 13, ', merged[b]: ', 9)
('a: ', 13, ' b: ', 11, ' merged[a]: ', 13, ', merged[b]: ', 11)
('a: ', 13, ' b: ', 17, ' merged[a]: ', 13, ', merged[b]: ', 13)
('a: ', 14, ' b: ', 8, ' merged[a]: ', 11, ', merged[b]: ', 7)
('a: ', 14, ' b: ', 11, ' merged[a]: ', 11, ', merged[b]: ', 11)
('a: ', 14, ' b: ', 20, ' merged[a]: ', 11, ', merged[b]: ', 20)
('a: ', 14, ' b: ', 26, ' merged[a]: ', 11, ', merged[b]: ', 2)
('a: ', 14, ' b: ', 30, ' merged[a]: ', 11, ', merged[b]: ', 20)
('a: ', 14, ' b: ', 41, ' merged[a]: ', 11, ', merged[b]: ', 41)
('a: ', 15, ' b: ', 3, ' merged[a]: ', 15, ', merged[b]: ', 3)
('a: ', 15, ' b: ', 8, ' merged[a]: ', 15, ', merged[b]: ', 7)
('a: ', 15, ' b: ', 16, ' merged[a]: ', 15, ', merged[b]: ', 15)
('a: ', 15, ' b: ', 26, ' merged[a]: ', 15, ', merged[b]: ', 2)
('a: ', 16, ' b: ', 15, ' merged[a]: ', 15, ', merged[b]: ', 15)
('a: ', 17, ' b: ', 4, ' merged[a]: ', 13, ', merged[b]: ', 4)
('a: ', 17, ' b: ', 5, ' merged[a]: ', 13, ', merged[b]: ', 5)
('a: ', 17, ' b: ', 11, ' merged[a]: ', 13, ', merged[b]: ', 11)
('a: ', 17, ' b: ', 13, ' merged[a]: ', 13, ', merged[b]: ', 13)
('a: ', 17, ' b: ', 22, ' merged[a]: ', 13, ', merged[b]: ', 0)
('a: ', 17, ' b: ', 23, ' merged[a]: ', 13, ', merged[b]: ', 1)
('a: ', 18, ' b: ', 3, ' merged[a]: ', 18, ', merged[b]: ', 3)
('a: ', 19, ' b: ', 3, ' merged[a]: ', 9, ', merged[b]: ', 3)
('a: ', 19, ' b: ', 9, ' merged[a]: ', 9, ', merged[b]: ', 9)
('a: ', 19, ' b: ', 20, ' merged[a]: ', 9, ', merged[b]: ', 20)
('a: ', 19, ' b: ', 30, ' merged[a]: ', 9, ', merged[b]: ', 20)
('a: ', 20, ' b: ', 8, ' merged[a]: ', 20, ', merged[b]: ', 7)
('a: ', 20, ' b: ', 11, ' merged[a]: ', 20, ', merged[b]: ', 11)
('a: ', 20, ' b: ', 14, ' merged[a]: ', 20, ', merged[b]: ', 11)
('a: ', 20, ' b: ', 19, ' merged[a]: ', 20, ', merged[b]: ', 9)
('a: ', 20, ' b: ', 22, ' merged[a]: ', 20, ', merged[b]: ', 0)
('a: ', 20, ' b: ', 26, ' merged[a]: ', 20, ', merged[b]: ', 2)
('a: ', 20, ' b: ', 30, ' merged[a]: ', 20, ', merged[b]: ', 20)
('a: ', 20, ' b: ', 49, ' merged[a]: ', 20, ', merged[b]: ', 5)
('a: ', 22, ' b: ', 0, ' merged[a]: ', 0, ', merged[b]: ', 0)
('a: ', 22, ' b: ', 6, ' merged[a]: ', 0, ', merged[b]: ', 3)
('a: ', 22, ' b: ', 17, ' merged[a]: ', 0, ', merged[b]: ', 13)
('a: ', 22, ' b: ', 20, ' merged[a]: ', 0, ', merged[b]: ', 20)
('a: ', 23, ' b: ', 0, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 23, ' b: ', 1, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 23, ' b: ', 3, ' merged[a]: ', 1, ', merged[b]: ', 3)
('a: ', 23, ' b: ', 9, ' merged[a]: ', 1, ', merged[b]: ', 9)
('a: ', 23, ' b: ', 11, ' merged[a]: ', 1, ', merged[b]: ', 11)
('a: ', 23, ' b: ', 17, ' merged[a]: ', 1, ', merged[b]: ', 13)
('a: ', 26, ' b: ', 1, ' merged[a]: ', 2, ', merged[b]: ', 1)
('a: ', 26, ' b: ', 2, ' merged[a]: ', 2, ', merged[b]: ', 2)
('a: ', 26, ' b: ', 5, ' merged[a]: ', 2, ', merged[b]: ', 5)
('a: ', 26, ' b: ', 14, ' merged[a]: ', 2, ', merged[b]: ', 11)
('a: ', 26, ' b: ', 15, ' merged[a]: ', 2, ', merged[b]: ', 15)
('a: ', 26, ' b: ', 20, ' merged[a]: ', 2, ', merged[b]: ', 20)
('a: ', 26, ' b: ', 30, ' merged[a]: ', 2, ', merged[b]: ', 20)
('a: ', 28, ' b: ', 3, ' merged[a]: ', 28, ', merged[b]: ', 3)
('a: ', 28, ' b: ', 30, ' merged[a]: ', 28, ', merged[b]: ', 20)
('a: ', 30, ' b: ', 1, ' merged[a]: ', 20, ', merged[b]: ', 1)
('a: ', 30, ' b: ', 3, ' merged[a]: ', 20, ', merged[b]: ', 3)
('a: ', 30, ' b: ', 4, ' merged[a]: ', 20, ', merged[b]: ', 4)
('a: ', 30, ' b: ', 6, ' merged[a]: ', 20, ', merged[b]: ', 3)
('a: ', 30, ' b: ', 7, ' merged[a]: ', 20, ', merged[b]: ', 7)
('a: ', 30, ' b: ', 11, ' merged[a]: ', 20, ', merged[b]: ', 11)
('a: ', 30, ' b: ', 14, ' merged[a]: ', 20, ', merged[b]: ', 11)
('a: ', 30, ' b: ', 19, ' merged[a]: ', 20, ', merged[b]: ', 9)
('a: ', 30, ' b: ', 20, ' merged[a]: ', 20, ', merged[b]: ', 20)
('a: ', 30, ' b: ', 26, ' merged[a]: ', 20, ', merged[b]: ', 2)
('a: ', 30, ' b: ', 28, ' merged[a]: ', 20, ', merged[b]: ', 28)
('a: ', 34, ' b: ', 2, ' merged[a]: ', 34, ', merged[b]: ', 2)
('a: ', 34, ' b: ', 4, ' merged[a]: ', 34, ', merged[b]: ', 4)
('a: ', 34, ' b: ', 5, ' merged[a]: ', 34, ', merged[b]: ', 5)
('a: ', 34, ' b: ', 8, ' merged[a]: ', 34, ', merged[b]: ', 7)
('a: ', 34, ' b: ', 41, ' merged[a]: ', 34, ', merged[b]: ', 41)
('a: ', 34, ' b: ', 48, ' merged[a]: ', 34, ', merged[b]: ', 34)
('a: ', 40, ' b: ', 1, ' merged[a]: ', 4, ', merged[b]: ', 1)
('a: ', 40, ' b: ', 4, ' merged[a]: ', 4, ', merged[b]: ', 4)
('a: ', 40, ' b: ', 6, ' merged[a]: ', 4, ', merged[b]: ', 3)
('a: ', 41, ' b: ', 0, ' merged[a]: ', 41, ', merged[b]: ', 0)
('a: ', 41, ' b: ', 1, ' merged[a]: ', 41, ', merged[b]: ', 1)
('a: ', 41, ' b: ', 2, ' merged[a]: ', 41, ', merged[b]: ', 2)
('a: ', 41, ' b: ', 4, ' merged[a]: ', 41, ', merged[b]: ', 4)
('a: ', 41, ' b: ', 6, ' merged[a]: ', 41, ', merged[b]: ', 3)
('a: ', 41, ' b: ', 9, ' merged[a]: ', 41, ', merged[b]: ', 9)
('a: ', 41, ' b: ', 11, ' merged[a]: ', 41, ', merged[b]: ', 11)
('a: ', 41, ' b: ', 14, ' merged[a]: ', 41, ', merged[b]: ', 11)
('a: ', 41, ' b: ', 34, ' merged[a]: ', 41, ', merged[b]: ', 34)
('a: ', 48, ' b: ', 6, ' merged[a]: ', 34, ', merged[b]: ', 3)
('a: ', 48, ' b: ', 34, ' merged[a]: ', 34, ', merged[b]: ', 34)
('a: ', 49, ' b: ', 5, ' merged[a]: ', 5, ', merged[b]: ', 5)
('a: ', 49, ' b: ', 6, ' merged[a]: ', 5, ', merged[b]: ', 3)
('a: ', 49, ' b: ', 20, ' merged[a]: ', 5, ', merged[b]: ', 20)
Coarsening Round 2:
Generate coarsened graph with 16 nodes and 114 edges
in external collapsing; merged is 
{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 7: 7, 41: 4, 11: 7, 34: 2, 13: 9, 18: 18, 20: 1, 9: 9, 15: 15, 28: 3}

edges 
[[0, 1], [0, 2], [0, 3], [0, 13], [0, 20], [0, 41], [1, 0], [1, 2], [1, 3], [1, 4], [1, 7], [1, 9], [1, 11], [1, 13], [1, 20], [1, 41], [34, 2], [34, 3], [34, 4], [34, 5], [34, 7], [34, 41], [3, 0], [3, 1], [3, 2], [3, 4], [3, 5], [3, 7], [3, 9], [3, 15], [3, 18], [3, 20], [3, 28], [3, 34], [3, 41], [4, 1], [4, 3], [4, 9], [4, 13], [4, 20], [4, 34], [4, 41], [5, 2], [5, 3], [5, 7], [5, 9], [5, 13], [5, 20], [5, 34], [7, 1], [7, 2], [7, 3], [7, 5], [7, 9], [7, 11], [7, 15], [7, 20], [7, 34], [41, 0], [41, 1], [41, 2], [41, 3], [41, 4], [41, 9], [41, 11], [41, 34], [11, 1], [11, 2], [11, 7], [11, 9], [11, 13], [11, 20], [11, 41], [2, 0], [2, 1], [2, 3], [2, 5], [2, 7], [2, 11], [2, 15], [2, 20], [2, 34], [2, 41], [13, 0], [13, 1], [13, 4], [13, 5], [13, 9], [13, 11], [18, 3], [20, 0], [20, 1], [20, 2], [20, 3], [20, 4], [20, 5], [20, 7], [20, 9], [20, 11], [20, 28], [9, 1], [9, 3], [9, 4], [9, 5], [9, 7], [9, 11], [9, 13], [9, 20], [9, 41], [15, 2], [15, 3], [15, 7], [28, 3], [28, 20]]

('a: ', 0, ' b: ', 1, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 0, ' b: ', 2, ' merged[a]: ', 0, ', merged[b]: ', 2)
('a: ', 0, ' b: ', 3, ' merged[a]: ', 0, ', merged[b]: ', 3)
('a: ', 0, ' b: ', 13, ' merged[a]: ', 0, ', merged[b]: ', 9)
('a: ', 0, ' b: ', 20, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 0, ' b: ', 41, ' merged[a]: ', 0, ', merged[b]: ', 4)
('a: ', 1, ' b: ', 0, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 1, ' b: ', 2, ' merged[a]: ', 1, ', merged[b]: ', 2)
('a: ', 1, ' b: ', 3, ' merged[a]: ', 1, ', merged[b]: ', 3)
('a: ', 1, ' b: ', 4, ' merged[a]: ', 1, ', merged[b]: ', 4)
('a: ', 1, ' b: ', 7, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 1, ' b: ', 9, ' merged[a]: ', 1, ', merged[b]: ', 9)
('a: ', 1, ' b: ', 11, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 1, ' b: ', 13, ' merged[a]: ', 1, ', merged[b]: ', 9)
('a: ', 1, ' b: ', 20, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 1, ' b: ', 41, ' merged[a]: ', 1, ', merged[b]: ', 4)
('a: ', 34, ' b: ', 2, ' merged[a]: ', 2, ', merged[b]: ', 2)
('a: ', 34, ' b: ', 3, ' merged[a]: ', 2, ', merged[b]: ', 3)
('a: ', 34, ' b: ', 4, ' merged[a]: ', 2, ', merged[b]: ', 4)
('a: ', 34, ' b: ', 5, ' merged[a]: ', 2, ', merged[b]: ', 5)
('a: ', 34, ' b: ', 7, ' merged[a]: ', 2, ', merged[b]: ', 7)
('a: ', 34, ' b: ', 41, ' merged[a]: ', 2, ', merged[b]: ', 4)
('a: ', 3, ' b: ', 0, ' merged[a]: ', 3, ', merged[b]: ', 0)
('a: ', 3, ' b: ', 1, ' merged[a]: ', 3, ', merged[b]: ', 1)
('a: ', 3, ' b: ', 2, ' merged[a]: ', 3, ', merged[b]: ', 2)
('a: ', 3, ' b: ', 4, ' merged[a]: ', 3, ', merged[b]: ', 4)
('a: ', 3, ' b: ', 5, ' merged[a]: ', 3, ', merged[b]: ', 5)
('a: ', 3, ' b: ', 7, ' merged[a]: ', 3, ', merged[b]: ', 7)
('a: ', 3, ' b: ', 9, ' merged[a]: ', 3, ', merged[b]: ', 9)
('a: ', 3, ' b: ', 15, ' merged[a]: ', 3, ', merged[b]: ', 15)
('a: ', 3, ' b: ', 18, ' merged[a]: ', 3, ', merged[b]: ', 18)
('a: ', 3, ' b: ', 20, ' merged[a]: ', 3, ', merged[b]: ', 1)
('a: ', 3, ' b: ', 28, ' merged[a]: ', 3, ', merged[b]: ', 3)
('a: ', 3, ' b: ', 34, ' merged[a]: ', 3, ', merged[b]: ', 2)
('a: ', 3, ' b: ', 41, ' merged[a]: ', 3, ', merged[b]: ', 4)
('a: ', 4, ' b: ', 1, ' merged[a]: ', 4, ', merged[b]: ', 1)
('a: ', 4, ' b: ', 3, ' merged[a]: ', 4, ', merged[b]: ', 3)
('a: ', 4, ' b: ', 9, ' merged[a]: ', 4, ', merged[b]: ', 9)
('a: ', 4, ' b: ', 13, ' merged[a]: ', 4, ', merged[b]: ', 9)
('a: ', 4, ' b: ', 20, ' merged[a]: ', 4, ', merged[b]: ', 1)
('a: ', 4, ' b: ', 34, ' merged[a]: ', 4, ', merged[b]: ', 2)
('a: ', 4, ' b: ', 41, ' merged[a]: ', 4, ', merged[b]: ', 4)
('a: ', 5, ' b: ', 2, ' merged[a]: ', 5, ', merged[b]: ', 2)
('a: ', 5, ' b: ', 3, ' merged[a]: ', 5, ', merged[b]: ', 3)
('a: ', 5, ' b: ', 7, ' merged[a]: ', 5, ', merged[b]: ', 7)
('a: ', 5, ' b: ', 9, ' merged[a]: ', 5, ', merged[b]: ', 9)
('a: ', 5, ' b: ', 13, ' merged[a]: ', 5, ', merged[b]: ', 9)
('a: ', 5, ' b: ', 20, ' merged[a]: ', 5, ', merged[b]: ', 1)
('a: ', 5, ' b: ', 34, ' merged[a]: ', 5, ', merged[b]: ', 2)
('a: ', 7, ' b: ', 1, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 7, ' b: ', 2, ' merged[a]: ', 7, ', merged[b]: ', 2)
('a: ', 7, ' b: ', 3, ' merged[a]: ', 7, ', merged[b]: ', 3)
('a: ', 7, ' b: ', 5, ' merged[a]: ', 7, ', merged[b]: ', 5)
('a: ', 7, ' b: ', 9, ' merged[a]: ', 7, ', merged[b]: ', 9)
('a: ', 7, ' b: ', 11, ' merged[a]: ', 7, ', merged[b]: ', 7)
('a: ', 7, ' b: ', 15, ' merged[a]: ', 7, ', merged[b]: ', 15)
('a: ', 7, ' b: ', 20, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 7, ' b: ', 34, ' merged[a]: ', 7, ', merged[b]: ', 2)
('a: ', 41, ' b: ', 0, ' merged[a]: ', 4, ', merged[b]: ', 0)
('a: ', 41, ' b: ', 1, ' merged[a]: ', 4, ', merged[b]: ', 1)
('a: ', 41, ' b: ', 2, ' merged[a]: ', 4, ', merged[b]: ', 2)
('a: ', 41, ' b: ', 3, ' merged[a]: ', 4, ', merged[b]: ', 3)
('a: ', 41, ' b: ', 4, ' merged[a]: ', 4, ', merged[b]: ', 4)
('a: ', 41, ' b: ', 9, ' merged[a]: ', 4, ', merged[b]: ', 9)
('a: ', 41, ' b: ', 11, ' merged[a]: ', 4, ', merged[b]: ', 7)
('a: ', 41, ' b: ', 34, ' merged[a]: ', 4, ', merged[b]: ', 2)
('a: ', 11, ' b: ', 1, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 11, ' b: ', 2, ' merged[a]: ', 7, ', merged[b]: ', 2)
('a: ', 11, ' b: ', 7, ' merged[a]: ', 7, ', merged[b]: ', 7)
('a: ', 11, ' b: ', 9, ' merged[a]: ', 7, ', merged[b]: ', 9)
('a: ', 11, ' b: ', 13, ' merged[a]: ', 7, ', merged[b]: ', 9)
('a: ', 11, ' b: ', 20, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 11, ' b: ', 41, ' merged[a]: ', 7, ', merged[b]: ', 4)
('a: ', 2, ' b: ', 0, ' merged[a]: ', 2, ', merged[b]: ', 0)
('a: ', 2, ' b: ', 1, ' merged[a]: ', 2, ', merged[b]: ', 1)
('a: ', 2, ' b: ', 3, ' merged[a]: ', 2, ', merged[b]: ', 3)
('a: ', 2, ' b: ', 5, ' merged[a]: ', 2, ', merged[b]: ', 5)
('a: ', 2, ' b: ', 7, ' merged[a]: ', 2, ', merged[b]: ', 7)
('a: ', 2, ' b: ', 11, ' merged[a]: ', 2, ', merged[b]: ', 7)
('a: ', 2, ' b: ', 15, ' merged[a]: ', 2, ', merged[b]: ', 15)
('a: ', 2, ' b: ', 20, ' merged[a]: ', 2, ', merged[b]: ', 1)
('a: ', 2, ' b: ', 34, ' merged[a]: ', 2, ', merged[b]: ', 2)
('a: ', 2, ' b: ', 41, ' merged[a]: ', 2, ', merged[b]: ', 4)
('a: ', 13, ' b: ', 0, ' merged[a]: ', 9, ', merged[b]: ', 0)
('a: ', 13, ' b: ', 1, ' merged[a]: ', 9, ', merged[b]: ', 1)
('a: ', 13, ' b: ', 4, ' merged[a]: ', 9, ', merged[b]: ', 4)
('a: ', 13, ' b: ', 5, ' merged[a]: ', 9, ', merged[b]: ', 5)
('a: ', 13, ' b: ', 9, ' merged[a]: ', 9, ', merged[b]: ', 9)
('a: ', 13, ' b: ', 11, ' merged[a]: ', 9, ', merged[b]: ', 7)
('a: ', 18, ' b: ', 3, ' merged[a]: ', 18, ', merged[b]: ', 3)
('a: ', 20, ' b: ', 0, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 20, ' b: ', 1, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 20, ' b: ', 2, ' merged[a]: ', 1, ', merged[b]: ', 2)
('a: ', 20, ' b: ', 3, ' merged[a]: ', 1, ', merged[b]: ', 3)
('a: ', 20, ' b: ', 4, ' merged[a]: ', 1, ', merged[b]: ', 4)
('a: ', 20, ' b: ', 5, ' merged[a]: ', 1, ', merged[b]: ', 5)
('a: ', 20, ' b: ', 7, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 20, ' b: ', 9, ' merged[a]: ', 1, ', merged[b]: ', 9)
('a: ', 20, ' b: ', 11, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 20, ' b: ', 28, ' merged[a]: ', 1, ', merged[b]: ', 3)
('a: ', 9, ' b: ', 1, ' merged[a]: ', 9, ', merged[b]: ', 1)
('a: ', 9, ' b: ', 3, ' merged[a]: ', 9, ', merged[b]: ', 3)
('a: ', 9, ' b: ', 4, ' merged[a]: ', 9, ', merged[b]: ', 4)
('a: ', 9, ' b: ', 5, ' merged[a]: ', 9, ', merged[b]: ', 5)
('a: ', 9, ' b: ', 7, ' merged[a]: ', 9, ', merged[b]: ', 7)
('a: ', 9, ' b: ', 11, ' merged[a]: ', 9, ', merged[b]: ', 7)
('a: ', 9, ' b: ', 13, ' merged[a]: ', 9, ', merged[b]: ', 9)
('a: ', 9, ' b: ', 20, ' merged[a]: ', 9, ', merged[b]: ', 1)
('a: ', 9, ' b: ', 41, ' merged[a]: ', 9, ', merged[b]: ', 4)
('a: ', 15, ' b: ', 2, ' merged[a]: ', 15, ', merged[b]: ', 2)
('a: ', 15, ' b: ', 3, ' merged[a]: ', 15, ', merged[b]: ', 3)
('a: ', 15, ' b: ', 7, ' merged[a]: ', 15, ', merged[b]: ', 7)
('a: ', 28, ' b: ', 3, ' merged[a]: ', 3, ', merged[b]: ', 3)
('a: ', 28, ' b: ', 20, ' merged[a]: ', 3, ', merged[b]: ', 1)
Coarsening Round 3:
Generate coarsened graph with 10 nodes and 56 edges
in external collapsing; merged is 
{0: 0, 1: 1, 2: 2, 3: 1, 4: 0, 5: 2, 7: 7, 9: 9, 15: 7, 18: 18}

edges 
[[0, 1], [0, 2], [0, 3], [0, 4], [0, 9], [1, 0], [1, 2], [1, 3], [1, 4], [1, 5], [1, 7], [1, 9], [2, 0], [2, 1], [2, 3], [2, 4], [2, 5], [2, 7], [2, 15], [3, 0], [3, 1], [3, 2], [3, 4], [3, 5], [3, 7], [3, 9], [3, 15], [3, 18], [4, 0], [4, 1], [4, 2], [4, 3], [4, 7], [4, 9], [5, 1], [5, 2], [5, 3], [5, 7], [5, 9], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 9], [7, 15], [9, 0], [9, 1], [9, 3], [9, 4], [9, 5], [9, 7], [15, 2], [15, 3], [15, 7], [18, 3]]

('a: ', 0, ' b: ', 1, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 0, ' b: ', 2, ' merged[a]: ', 0, ', merged[b]: ', 2)
('a: ', 0, ' b: ', 3, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 0, ' b: ', 4, ' merged[a]: ', 0, ', merged[b]: ', 0)
('a: ', 0, ' b: ', 9, ' merged[a]: ', 0, ', merged[b]: ', 9)
('a: ', 1, ' b: ', 0, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 1, ' b: ', 2, ' merged[a]: ', 1, ', merged[b]: ', 2)
('a: ', 1, ' b: ', 3, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 1, ' b: ', 4, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 1, ' b: ', 5, ' merged[a]: ', 1, ', merged[b]: ', 2)
('a: ', 1, ' b: ', 7, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 1, ' b: ', 9, ' merged[a]: ', 1, ', merged[b]: ', 9)
('a: ', 2, ' b: ', 0, ' merged[a]: ', 2, ', merged[b]: ', 0)
('a: ', 2, ' b: ', 1, ' merged[a]: ', 2, ', merged[b]: ', 1)
('a: ', 2, ' b: ', 3, ' merged[a]: ', 2, ', merged[b]: ', 1)
('a: ', 2, ' b: ', 4, ' merged[a]: ', 2, ', merged[b]: ', 0)
('a: ', 2, ' b: ', 5, ' merged[a]: ', 2, ', merged[b]: ', 2)
('a: ', 2, ' b: ', 7, ' merged[a]: ', 2, ', merged[b]: ', 7)
('a: ', 2, ' b: ', 15, ' merged[a]: ', 2, ', merged[b]: ', 7)
('a: ', 3, ' b: ', 0, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 3, ' b: ', 1, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 3, ' b: ', 2, ' merged[a]: ', 1, ', merged[b]: ', 2)
('a: ', 3, ' b: ', 4, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 3, ' b: ', 5, ' merged[a]: ', 1, ', merged[b]: ', 2)
('a: ', 3, ' b: ', 7, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 3, ' b: ', 9, ' merged[a]: ', 1, ', merged[b]: ', 9)
('a: ', 3, ' b: ', 15, ' merged[a]: ', 1, ', merged[b]: ', 7)
('a: ', 3, ' b: ', 18, ' merged[a]: ', 1, ', merged[b]: ', 18)
('a: ', 4, ' b: ', 0, ' merged[a]: ', 0, ', merged[b]: ', 0)
('a: ', 4, ' b: ', 1, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 4, ' b: ', 2, ' merged[a]: ', 0, ', merged[b]: ', 2)
('a: ', 4, ' b: ', 3, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 4, ' b: ', 7, ' merged[a]: ', 0, ', merged[b]: ', 7)
('a: ', 4, ' b: ', 9, ' merged[a]: ', 0, ', merged[b]: ', 9)
('a: ', 5, ' b: ', 1, ' merged[a]: ', 2, ', merged[b]: ', 1)
('a: ', 5, ' b: ', 2, ' merged[a]: ', 2, ', merged[b]: ', 2)
('a: ', 5, ' b: ', 3, ' merged[a]: ', 2, ', merged[b]: ', 1)
('a: ', 5, ' b: ', 7, ' merged[a]: ', 2, ', merged[b]: ', 7)
('a: ', 5, ' b: ', 9, ' merged[a]: ', 2, ', merged[b]: ', 9)
('a: ', 7, ' b: ', 1, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 7, ' b: ', 2, ' merged[a]: ', 7, ', merged[b]: ', 2)
('a: ', 7, ' b: ', 3, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 7, ' b: ', 4, ' merged[a]: ', 7, ', merged[b]: ', 0)
('a: ', 7, ' b: ', 5, ' merged[a]: ', 7, ', merged[b]: ', 2)
('a: ', 7, ' b: ', 9, ' merged[a]: ', 7, ', merged[b]: ', 9)
('a: ', 7, ' b: ', 15, ' merged[a]: ', 7, ', merged[b]: ', 7)
('a: ', 9, ' b: ', 0, ' merged[a]: ', 9, ', merged[b]: ', 0)
('a: ', 9, ' b: ', 1, ' merged[a]: ', 9, ', merged[b]: ', 1)
('a: ', 9, ' b: ', 3, ' merged[a]: ', 9, ', merged[b]: ', 1)
('a: ', 9, ' b: ', 4, ' merged[a]: ', 9, ', merged[b]: ', 0)
('a: ', 9, ' b: ', 5, ' merged[a]: ', 9, ', merged[b]: ', 2)
('a: ', 9, ' b: ', 7, ' merged[a]: ', 9, ', merged[b]: ', 7)
('a: ', 15, ' b: ', 2, ' merged[a]: ', 7, ', merged[b]: ', 2)
('a: ', 15, ' b: ', 3, ' merged[a]: ', 7, ', merged[b]: ', 1)
('a: ', 15, ' b: ', 7, ' merged[a]: ', 7, ', merged[b]: ', 7)
('a: ', 18, ' b: ', 3, ' merged[a]: ', 18, ', merged[b]: ', 1)
Coarsening Round 4:
Generate coarsened graph with 6 nodes and 22 edges
in external collapsing; merged is 
{0: 0, 1: 1, 2: 0, 7: 1, 9: 9, 18: 18}

edges 
[[0, 1], [0, 2], [0, 7], [0, 9], [1, 0], [1, 2], [1, 7], [1, 9], [1, 18], [2, 0], [2, 1], [2, 7], [2, 9], [7, 0], [7, 1], [7, 2], [7, 9], [9, 0], [9, 1], [9, 2], [9, 7], [18, 1]]

('a: ', 0, ' b: ', 1, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 0, ' b: ', 2, ' merged[a]: ', 0, ', merged[b]: ', 0)
('a: ', 0, ' b: ', 7, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 0, ' b: ', 9, ' merged[a]: ', 0, ', merged[b]: ', 9)
('a: ', 1, ' b: ', 0, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 1, ' b: ', 2, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 1, ' b: ', 7, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 1, ' b: ', 9, ' merged[a]: ', 1, ', merged[b]: ', 9)
('a: ', 1, ' b: ', 18, ' merged[a]: ', 1, ', merged[b]: ', 18)
('a: ', 2, ' b: ', 0, ' merged[a]: ', 0, ', merged[b]: ', 0)
('a: ', 2, ' b: ', 1, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 2, ' b: ', 7, ' merged[a]: ', 0, ', merged[b]: ', 1)
('a: ', 2, ' b: ', 9, ' merged[a]: ', 0, ', merged[b]: ', 9)
('a: ', 7, ' b: ', 0, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 7, ' b: ', 1, ' merged[a]: ', 1, ', merged[b]: ', 1)
('a: ', 7, ' b: ', 2, ' merged[a]: ', 1, ', merged[b]: ', 0)
('a: ', 7, ' b: ', 9, ' merged[a]: ', 1, ', merged[b]: ', 9)
('a: ', 9, ' b: ', 0, ' merged[a]: ', 9, ', merged[b]: ', 0)
('a: ', 9, ' b: ', 1, ' merged[a]: ', 9, ', merged[b]: ', 1)
('a: ', 9, ' b: ', 2, ' merged[a]: ', 9, ', merged[b]: ', 0)
('a: ', 9, ' b: ', 7, ' merged[a]: ', 9, ', merged[b]: ', 1)
('a: ', 18, ' b: ', 1, ' merged[a]: ', 18, ', merged[b]: ', 1)
Coarsening Round 5:
Generate coarsened graph with 4 nodes and 8 edges
final coarsened output data is: 
('len of recursive graphs: ', 6)

recursive graphs at level 3
defaultdict(<class 'magicgraph.WeightedNode'>, {0: [1, 2, 3, 4, 9], 1: [0, 2, 3, 4, 5, 7, 9], 2: [0, 1, 3, 4, 5, 7, 15], 3: [0, 1, 2, 4, 5, 7, 9, 15, 18], 4: [0, 1, 2, 3, 7, 9], 5: [1, 2, 3, 7, 9], 7: [1, 2, 3, 4, 5, 9, 15], 9: [0, 1, 3, 4, 5, 7], 15: [2, 3, 7], 18: [3]})

recursive merged nodes at level
{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 9, 11: 11, 12: 3, 13: 13, 14: 14, 15: 15, 16: 16, 17: 17, 18: 18, 19: 19, 20: 20, 21: 11, 22: 22, 23: 23, 24: 8, 25: 19, 26: 26, 27: 1, 28: 28, 29: 20, 30: 30, 31: 26, 32: 23, 33: 30, 34: 34, 35: 2, 36: 34, 37: 7, 38: 4, 39: 15, 40: 40, 41: 41, 42: 0, 43: 41, 44: 22, 45: 5, 46: 17, 47: 6, 48: 48, 49: 49}
{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 3, 7: 7, 8: 7, 9: 9, 11: 11, 13: 13, 14: 11, 15: 15, 16: 15, 17: 13, 18: 18, 19: 9, 20: 20, 22: 0, 23: 1, 26: 2, 28: 28, 30: 20, 34: 34, 40: 4, 41: 41, 48: 34, 49: 5}
{0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 7: 7, 41: 4, 11: 7, 34: 2, 13: 9, 18: 18, 20: 1, 9: 9, 15: 15, 28: 3}
{0: 0, 1: 1, 2: 2, 3: 1, 4: 0, 5: 2, 7: 7, 9: 9, 15: 7, 18: 18}
{0: 0, 1: 1, 2: 0, 7: 1, 9: 9, 18: 18}
